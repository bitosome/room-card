{"version":3,"file":"scoped-registry-mixin.js","sources":["src/scoped-registry-mixin.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport type {LitElement} from 'lit';\nimport {adoptStyles} from '@lit/reactive-element/css-tag.js';\n\n// Proposed interface changes\ndeclare global {\n  interface ShadowRootInit {\n    customElements?: CustomElementRegistry;\n  }\n  interface ShadowRoot {\n    importNode(node: Node, deep?: boolean): Node;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype LitElementConstructor = new (...args: any[]) => LitElement;\n\nexport type ElementDefinitionsMap = {\n  [key: string]: typeof HTMLElement;\n};\n\nexport function ScopedRegistryHost<SuperClass extends LitElementConstructor>(\n  superclass: SuperClass\n): SuperClass {\n  return class ScopedRegistryMixin extends superclass {\n    /**\n     * Obtains the scoped elements definitions map\n     */\n    static elementDefinitions?: ElementDefinitionsMap;\n    static registry?: CustomElementRegistry;\n\n    override createRenderRoot() {\n      const constructor = this.constructor as typeof ScopedRegistryMixin &\n        typeof LitElement;\n\n      const {registry, elementDefinitions, shadowRootOptions} = constructor;\n\n      if (elementDefinitions && !registry) {\n        constructor.registry = new CustomElementRegistry();\n\n        Object.entries(elementDefinitions).forEach(([tagName, klass]) =>\n          constructor.registry!.define(tagName, klass)\n        );\n      }\n\n      const renderRoot = (this.renderOptions.creationScope = this.attachShadow({\n        ...shadowRootOptions,\n        customElements: constructor.registry,\n      }));\n\n      adoptStyles(\n        renderRoot,\n        (this.constructor as typeof LitElement).elementStyles!\n      );\n\n      return renderRoot;\n    }\n  };\n}\n"],"names":["ScopedRegistryHost","superclass","createRenderRoot","constructor","this","registry","elementDefinitions","shadowRootOptions","CustomElementRegistry","Object","entries","forEach","tagName","klass","define","renderRoot","renderOptions","creationScope","attachShadow","customElements","adoptStyles","elementStyles"],"mappings":";;;;;YA0BgBA,EACdC,GAEA,OAAO,cAAkCA,EAO9BC,mBACP,MAAMC,EAAcC,KAAKD,aAGnBE,SAACA,EAAQC,mBAAEA,EAAkBC,kBAAEA,GAAqBJ,EAEtDG,IAAuBD,IACzBF,EAAYE,SAAW,IAAIG,sBAE3BC,OAAOC,QAAQJ,GAAoBK,SAAQ,EAAEC,EAASC,KACpDV,EAAYE,SAAUS,OAAOF,EAASC,MAI1C,MAAME,EAAcX,KAAKY,cAAcC,cAAgBb,KAAKc,aAAa,IACpEX,EACHY,eAAgBhB,EAAYE,WAQ9B,OALAe,EACEL,EACCX,KAAKD,YAAkCkB,eAGnCN"}